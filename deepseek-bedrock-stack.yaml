AWSTemplateFormatVersion: '2010-09-09'
Description: |
  CloudFormation template to deploy DeepSeek-R1-Distill-Llama-8B model to Amazon Bedrock.
  This template creates necessary IAM roles, S3 bucket, and Lambda functions for automated deployment.

Parameters:
  ModelName:
    Type: String
    Default: DeepSeek-R1-Distill-Llama-8B
    Description: Name of the DeepSeek model to be imported
  
  ImportedModelName:
    Type: String
    Default: deepseek-8b-model
    Description: Name for the imported model in Bedrock
    
  JobName:
    Type: String
    Default: deepseek-8b-import-job
    Description: Name for the model import job

  S3BucketPrefix:
    Type: String
    Default: DeepSeek-R1-Distill-Llama-8B
    Description: Prefix for S3 objects storing the model files

Resources:
  # S3 Bucket for model storage
  ModelStorageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  # Bedrock Custom Model Role
  BedrockCustomModelRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - bedrock.amazonaws.com
                - bedrock-customizations.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BedrockModelAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ModelStorageBucket.Arn
                  - !Sub ${ModelStorageBucket.Arn}/*
              - Effect: Allow
                Action:
                  - bedrock:CreateModelCustomizationJob
                  - bedrock:GetModelCustomizationJob
                  - bedrock:ListModelCustomizationJobs
                  - bedrock:TagResource
                  - bedrock:UntagResource
                  - bedrock:ListTagsForResource
                Resource: '*'

  # Lambda execution role for model deployment
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ModelDownloadAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ModelStorageBucket.Arn
                  - !Sub ${ModelStorageBucket.Arn}/*
              - Effect: Allow
                Action:
                  - bedrock:CreateModelCustomizationJob
                  - bedrock:GetModelCustomizationJob
                  - bedrock:ListModelCustomizationJobs
                Resource: '*'

  # Lambda function for model deployment
  ModelDeploymentFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: model_deployment.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ModelStorageBucket
        S3Key: lambda/model_deployment.zip
      Runtime: python3.9
      Timeout: 900
      MemorySize: 3008
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: ModelDeployment

  # Custom resource to trigger model deployment
  ModelDeploymentTrigger:
    Type: Custom::ModelDeployment
    Properties:
      ServiceToken: !GetAtt ModelDeploymentFunction.Arn
      BucketName: !Ref ModelStorageBucket
      S3Prefix: !Ref S3BucketPrefix
      JobName: !Ref JobName
      ImportedModelName: !Ref ImportedModelName
      RoleArn: !GetAtt BedrockCustomModelRole.Arn

Outputs:
  ModelStorageBucketName:
    Description: Name of the S3 bucket storing model files
    Value: !Ref ModelStorageBucket

  BedrockCustomModelRoleArn:
    Description: ARN of IAM role for Bedrock Custom Model Import
    Value: !GetAtt BedrockCustomModelRole.Arn

  ModelImportJobArn:
    Description: ARN of the Bedrock Model Import Job
    Value: !GetAtt ModelDeploymentTrigger.JobArn 